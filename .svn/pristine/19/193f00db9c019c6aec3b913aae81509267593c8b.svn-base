<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="fr">
<head>
<!-- Generated by javadoc (version 1.7.0_60) on Mon Feb 16 15:57:47 CET 2015 -->
<title>APIGeocod</title>
<meta name="date" content="2015-02-16">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="APIGeocod";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/APIGeocod.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../APIJson/APIDirectionJson.html" title="class in APIJson"><span class="strong">Prev Class</span></a></li>
<li><a href="../APIJson/APIMatrixJson.html" title="class in APIJson"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?APIJson/APIGeocod.html" target="_top">Frames</a></li>
<li><a href="APIGeocod.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">APIJson</div>
<h2 title="Class APIGeocod" class="title">Class APIGeocod</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>APIJson.APIGeocod</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">APIGeocod</span>
extends java.lang.Object</pre>
<div class="block">This class brings together different methods used to read a Json object from an URL and get a Json object containing information about the precise adress of a given point.</div>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>Groupe L</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../APIJson/APIGeocod.html#fr">fr</a></strong></code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../APIJson/APIGeocod.html#APIGeocod()">APIGeocod</a></strong>()</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.Boolean</code></td>
<td class="colLast"><code><strong><a href="../APIJson/APIGeocod.html#checkIfPOI(org.json.JSONObject)">checkIfPOI</a></strong>(org.json.JSONObject&nbsp;json)</code>
<div class="block">This function check if the monument you're looking for in inside a squared area around Paris, and if so, look if the long name of the monument isn't "Paris".</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../APIJson/APIGeocod.html#getAdresse(org.openstreetmap.gui.jmapviewer.Coordinate)">getAdresse</a></strong>(org.openstreetmap.gui.jmapviewer.Coordinate&nbsp;coord)</code>
<div class="block">Return the adress of a monument with a given Coordinate Object</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../APIJson/APIGeocod.html#getAdresse(org.json.JSONObject)">getAdresse</a></strong>(org.json.JSONObject&nbsp;json)</code>
<div class="block">Return the adress of a monument with a given JSON Object</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../APIJson/APIGeocod.html#getAdresse(java.lang.String)">getAdresse</a></strong>(java.lang.String&nbsp;org)</code>
<div class="block">Return the adress of a monument with a given String</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static Modele.Coordonnees</code></td>
<td class="colLast"><code><strong><a href="../APIJson/APIGeocod.html#getCoordones(org.json.JSONObject)">getCoordones</a></strong>(org.json.JSONObject&nbsp;jsonObject)</code>
<div class="block">This return coordinates for a given JSON object related to a monument</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static Modele.Coordonnees</code></td>
<td class="colLast"><code><strong><a href="../APIJson/APIGeocod.html#getCoordones(java.lang.String)">getCoordones</a></strong>(java.lang.String&nbsp;org)</code>
<div class="block">This return the Coordonnees Object of a given adress.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static org.json.JSONObject</code></td>
<td class="colLast"><code><strong><a href="../APIJson/APIGeocod.html#getJSON(java.lang.String)">getJSON</a></strong>(java.lang.String&nbsp;org)</code>
<div class="block">The getJSON method output a JSON Object containing precise information such as coordinates, full adress with informations surch as :
 
  Street Number (if any)
  Route 
  Locality
  Level 2 Administrative Area (In France this would be the "departement"
  Level 1 Administrative Area (In France this would be the "region"
  Country
  Postal code
  Location :
        
         Latitude (Double)
         Longitude (Double)
        
 
 The monument need to been in Paris, du to the structur of the method (append "Paris" at the end of the adress automaticly)</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../APIJson/APIGeocod.html#getNom(org.json.JSONObject)">getNom</a></strong>(org.json.JSONObject&nbsp;json)</code>
<div class="block">This function returns the complete name of a monument using a JSON Object as parameter</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../APIJson/APIGeocod.html#getNom(java.lang.String)">getNom</a></strong>(java.lang.String&nbsp;org)</code>
<div class="block">This function returns the complete name of a monument using a String as parameter</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private static java.lang.String</code></td>
<td class="colLast"><code><strong><a href="../APIJson/APIGeocod.html#readAll(java.io.Reader)">readAll</a></strong>(java.io.Reader&nbsp;rd)</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static org.json.JSONObject</code></td>
<td class="colLast"><code><strong><a href="../APIJson/APIGeocod.html#readJsonFromUrl(java.lang.String)">readJsonFromUrl</a></strong>(java.lang.String&nbsp;url)</code>&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field_detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="fr">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>fr</h4>
<pre>public static final&nbsp;java.lang.String fr</pre>
<dl><dt><span class="strong">See Also:</span></dt><dd><a href="../constant-values.html#APIJson.APIGeocod.fr">Constant Field Values</a></dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="APIGeocod()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>APIGeocod</h4>
<pre>public&nbsp;APIGeocod()</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="readAll(java.io.Reader)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readAll</h4>
<pre>private static&nbsp;java.lang.String&nbsp;readAll(java.io.Reader&nbsp;rd)
                                 throws java.io.IOException</pre>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>rd</code> - a Reader object</dd>
<dt><span class="strong">Returns:</span></dt><dd>a String, content of the rd Reader given as a param</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd></dl>
</li>
</ul>
<a name="readJsonFromUrl(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>readJsonFromUrl</h4>
<pre>public static&nbsp;org.json.JSONObject&nbsp;readJsonFromUrl(java.lang.String&nbsp;url)
                                           throws java.io.IOException,
                                                  org.json.JSONException</pre>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>url</code> - an asbolute URL well formated (cf Google API Doc)</dd>
<dt><span class="strong">Returns:</span></dt><dd>the JSON Object produce by the request send at the URL taken as param.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.json.JSONException</code> - if the JSON Object seems to be wrongly fomated</dd></dl>
</li>
</ul>
<a name="getJSON(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getJSON</h4>
<pre>public static&nbsp;org.json.JSONObject&nbsp;getJSON(java.lang.String&nbsp;org)
                                   throws java.io.IOException,
                                          org.json.JSONException</pre>
<div class="block">The getJSON method output a JSON Object containing precise information such as coordinates, full adress with informations surch as :
 <ul>
 <li> Street Number (if any)
 <li> Route 
 <li> Locality
 <li> Level 2 Administrative Area (In France this would be the "departement"
 <li> Level 1 Administrative Area (In France this would be the "region"
 <li> Country
 <li> Postal code
 <li> Location :
        <ul>
        <li> Latitude (Double)
        <li> Longitude (Double)
        </ul>
 </ul>
 The monument need to been in Paris, du to the structur of the method (append "Paris" at the end of the adress automaticly)</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>org</code> - a String containing the approximative adress of a monument in Paris.</dd>
<dt><span class="strong">Returns:</span></dt><dd>a JSON Object containing information about the monument at the adress given as param. The structure of the JSON outputed can be found on the Google API Doc.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.json.JSONException</code> - if the JSON Object seems to be wrongly fomated</dd></dl>
</li>
</ul>
<a name="getCoordones(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCoordones</h4>
<pre>public static&nbsp;Modele.Coordonnees&nbsp;getCoordones(java.lang.String&nbsp;org)
                                       throws java.io.IOException,
                                              org.json.JSONException</pre>
<div class="block">This return the Coordonnees Object of a given adress.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>org</code> - a String containing the approximative adress of a monument in Paris.</dd>
<dt><span class="strong">Returns:</span></dt><dd>a Coordonnees Object</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.json.JSONException</code></dd></dl>
</li>
</ul>
<a name="getCoordones(org.json.JSONObject)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCoordones</h4>
<pre>public static&nbsp;Modele.Coordonnees&nbsp;getCoordones(org.json.JSONObject&nbsp;jsonObject)
                                       throws java.io.IOException,
                                              org.json.JSONException</pre>
<div class="block">This return coordinates for a given JSON object related to a monument</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>jsonObject</code> - containing monument information (from Geocod API)</dd>
<dt><span class="strong">Returns:</span></dt><dd>Coordonnees object</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.json.JSONException</code></dd></dl>
</li>
</ul>
<a name="getAdresse(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getAdresse</h4>
<pre>public static&nbsp;java.lang.String&nbsp;getAdresse(java.lang.String&nbsp;org)
                                   throws java.io.IOException,
                                          org.json.JSONException</pre>
<div class="block">Return the adress of a monument with a given String</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>org</code> - The name of the monument you want to get the adress from</dd>
<dt><span class="strong">Returns:</span></dt><dd>String : the adress of the given monument</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.json.JSONException</code></dd></dl>
</li>
</ul>
<a name="getAdresse(org.openstreetmap.gui.jmapviewer.Coordinate)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getAdresse</h4>
<pre>public static&nbsp;java.lang.String&nbsp;getAdresse(org.openstreetmap.gui.jmapviewer.Coordinate&nbsp;coord)
                                   throws java.io.IOException,
                                          org.json.JSONException</pre>
<div class="block">Return the adress of a monument with a given Coordinate Object</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>coord</code> - The Coordinate object of the monument you want to get the adress from</dd>
<dt><span class="strong">Returns:</span></dt><dd>String : the adress of the given monument</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.json.JSONException</code></dd></dl>
</li>
</ul>
<a name="getAdresse(org.json.JSONObject)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getAdresse</h4>
<pre>public static&nbsp;java.lang.String&nbsp;getAdresse(org.json.JSONObject&nbsp;json)
                                   throws org.json.JSONException</pre>
<div class="block">Return the adress of a monument with a given JSON Object</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>json</code> - The JSON object of the monument you want to get the adress from</dd>
<dt><span class="strong">Returns:</span></dt><dd>String : the adress of the given monument</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.json.JSONException</code></dd></dl>
</li>
</ul>
<a name="getNom(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNom</h4>
<pre>public static&nbsp;java.lang.String&nbsp;getNom(java.lang.String&nbsp;org)
                               throws java.io.IOException,
                                      org.json.JSONException</pre>
<div class="block">This function returns the complete name of a monument using a String as parameter</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>org</code> - A String that will be used as monument name for a Geocode API Research.</dd>
<dt><span class="strong">Returns:</span></dt><dd>A string with the full name of the monument</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.json.JSONException</code></dd></dl>
</li>
</ul>
<a name="getNom(org.json.JSONObject)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNom</h4>
<pre>public static&nbsp;java.lang.String&nbsp;getNom(org.json.JSONObject&nbsp;json)
                               throws java.io.IOException,
                                      org.json.JSONException</pre>
<div class="block">This function returns the complete name of a monument using a JSON Object as parameter</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>json</code> - JSON Object obtained through Geocode API</dd>
<dt><span class="strong">Returns:</span></dt><dd>A string with the full name of the monument</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.io.IOException</code></dd>
<dd><code>org.json.JSONException</code></dd></dl>
</li>
</ul>
<a name="checkIfPOI(org.json.JSONObject)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>checkIfPOI</h4>
<pre>public static&nbsp;java.lang.Boolean&nbsp;checkIfPOI(org.json.JSONObject&nbsp;json)
                                    throws org.json.JSONException</pre>
<div class="block">This function check if the monument you're looking for in inside a squared area around Paris, and if so, look if the long name of the monument isn't "Paris". Indeed, the Geocode API return the center of Paris for a research that doesn't existe (i.e : "azertyuiop Paris" will return a long name = "Paris").</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>json</code> - Un monument récupéré par une autre méthode, un fichier JSON issue de l'API Geocode !</dd>
<dt><span class="strong">Returns:</span></dt><dd>true si le monument existe, false si le monument est invalide</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>org.json.JSONException</code></dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/APIGeocod.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../APIJson/APIDirectionJson.html" title="class in APIJson"><span class="strong">Prev Class</span></a></li>
<li><a href="../APIJson/APIMatrixJson.html" title="class in APIJson"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?APIJson/APIGeocod.html" target="_top">Frames</a></li>
<li><a href="APIGeocod.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field_summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field_detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
